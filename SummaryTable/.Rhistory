print(i)
if (!i %in% installed.packages())
{install.packages(i)}
library(i, character.only = TRUE)
}
PackagesToInstall_Custom<-c('WHOCountryNames','SummaryTable')
for (i in PackagesToInstall_Custom) {
print(i)
if (!i %in% installed.packages())
{install_github(paste0('romanceline/',i))}
library(i, character.only = TRUE)
}
plain <- function(x,...) {
format(x, ..., scientific = FALSE, trim = TRUE,big.mark=" ")
}
runningdataset<-read.csv('qry_COVID_cases_by_date_final.CSV')
ListSheets<-excel_sheets('VariantData.xlsx')
variantdataset_UK<-read_excel('VariantData.xlsx', sheet = 'UK variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_UK)<-c('ADM0NAME','cases')
variantdataset_SA<-read_excel('VariantData.xlsx', sheet = 'SA variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_SA)<-c('ADM0NAME','cases')
variantdataset_Brazil<-read_excel('VariantData.xlsx', sheet = 'Brazilian variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_Brazil)<-c('ADM0NAME','cases')
EuroDataset<-GetEpiData() %>% mutate(ADM0NAME=str_to_title(ADM0NAME))
CurrentDate<-max(EuroDataset$DateReport)
EuroDataset_Today<-EuroDataset %>% filter(DateReport==CurrentDate)
HQDataset<-read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv',fileEncoding="UTF-8-BOM")
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate)
TotalCasesToday_EU<-plain(sum(EuroDataset_Today$NewCases))
TotalDeathsToday_EU<-plain(sum(EuroDataset_Today$NewDeaths))
NbCountriesCasesToday_EU<-nrow(EuroDataset_Today %>% filter(NewCases!=0))
CountriesMore5000Cases_EU<-EuroDataset_Today %>% filter(NewCases>=5000) %>%
arrange(desc(NewCases)) %>% mutate(NewCases=plain(NewCases))
NbCountriesMore5000Cases_EU<-nrow(CountriesMore5000Cases_EU)
ListCountriesOver5000Cases<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore5000Cases_EU-1,1)){
txt_<-paste0(CountriesMore5000Cases_EU$ADM0NAME[i],' (',CountriesMore5000Cases_EU$NewCases[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore5000Cases_EU$ADM0NAME[NbCountriesMore5000Cases_EU],' (',CountriesMore5000Cases_EU$NewCases[NbCountriesMore5000Cases_EU],')')
return(txt)
}
CountriesMore100Deaths_EU<-EuroDataset_Today %>% filter(NewDeaths>=100) %>% arrange(desc(NewDeaths)) %>%
mutate(NewDeaths=plain(NewDeaths))
NbCountriesMore100Deaths_EU<-nrow(CountriesMore100Deaths_EU)
ListCountriesOver100Deaths<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore100Deaths_EU-1,1)){
txt_<-paste0(CountriesMore100Deaths_EU$ADM0NAME[i],' (',CountriesMore100Deaths_EU$NewDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore100Deaths_EU$ADM0NAME[NbCountriesMore100Deaths_EU],' (',CountriesMore100Deaths_EU$NewDeaths[NbCountriesMore100Deaths_EU],')')
return(txt)
}
SummTable_EU<-SummaryTable(runningdataset)
Top10Countries_7DaysIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(SvnDaysIncidence_Latest)) %>%
mutate(SvnDaysIncidence_Latest=plain(SvnDaysIncidence_Latest))
TopCountries_CumCases_EU<-SummTable %>%
arrange(desc(TotalCases)) %>%
mutate(TotalCases=plain(TotalCases))
Top10Countries_CumIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(CumulativeIncidence)) %>%
mutate(CumulativeIncidence=plain(CumulativeIncidence))
TotalCases_EU<-plain(sum(SummTable_EU$TotalCases))
TotalCases_HQ<-sum( %>% day$Cumulative_cases)
Share_EU_Cases<-round(TotalCases_EU/TotalCases_HQ*100,0)
TotalDeaths_EU<-plain(sum(SummTable_EU$TotalDeaths))
TotalDeaths_HQ<-sum(HQDataset_Today$Cumulative_deaths)
Share_EU_Deaths<-round(TotalDeaths_EU/TotalDeaths_HQ*100,0)
Top3_CumCases_HQ<-HQDataset_Today %>%
arrange(desc(Cumulative_cases)) %>%
top_n(3,Cumulative_cases) %>%
mutate(Cumulative_cases=plain(Cumulative_cases))
CountriesOver30000Deaths_EU<-SummTable %>%
filter(TotalDeaths>=30000) %>% arrange(desc(TotalDeaths)) %>%
mutate(TotalDeaths=plain(TotalDeaths))
Nb_CountriesOver30000Deaths_EU<-nrow(CountriesOver30000Deaths_EU)
ListCountriesOver30000Deaths<-function(){
txt<-as.character()
for (i in seq(1,Nb_CountriesOver30000Deaths_EU-1,1)){
txt_<-paste0(CountriesOver30000Deaths_EU$ADM0NAME[i],' (',CountriesOver30000Deaths_EU$TotalDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesOver30000Deaths_EU$ADM0NAME[Nb_CountriesOver30000Deaths_EU],' (',CountriesOver30000Deaths_EU$TotalDeaths[Nb_CountriesOver30000Deaths_EU],')')
return(txt)
}
NbCountries_VariantUK<-nrow(variantdataset_UK %>% filter(!is.na(cases)))
NbCountries_VariantSA<-nrow(variantdataset_SA %>% filter(!is.na(cases)))
NbCountries_VariantBrazil<-nrow(variantdataset_Brazil %>% filter(!is.na(cases)))
TotalCases_VariantUK<-plain(sum(variantdataset_UK$cases,na.rm=TRUE))
TotalCases_VariantSA<-plain(sum(variantdataset_SA$cases,na.rm=TRUE))
TotalCases_VariantBrazil<-plain(sum(variantdataset_Brazil$cases,na.rm=TRUE))
render("DailyList.Rmd",output_file=paste0('DailyList_',CurrentDate))
TotalCases_EU<-plain(sum(SummTable_EU$TotalCases))
TotalCases_HQ<-plain(sum(HQDataset_Today$Cumulative_cases))
Share_EU_Cases<-round(TotalCases_EU/TotalCases_HQ*100,0)
Share_EU_Cases<-round(sum(SummTable_EU$TotalCases)/sum(HQDataset_Today$Cumulative_cases)*100,0)
TotalDeaths_EU<-plain(sum(SummTable_EU$TotalDeaths))
TotalDeaths_HQ<-plain(sum(HQDataset_Today$Cumulative_deaths))
Share_EU_Deaths<-round(sum(SummTable_EU$TotalDeaths)/sum(HQDataset_Today$Cumulative_deaths)*100,0)
PackagesToInstall_CRAN<-c('dplyr','markdown','readxl','devtools')
for (i in PackagesToInstall_CRAN) {
print(i)
if (!i %in% installed.packages())
{install.packages(i)}
library(i, character.only = TRUE)
}
PackagesToInstall_Custom<-c('WHOCountryNames','SummaryTable')
for (i in PackagesToInstall_Custom) {
print(i)
if (!i %in% installed.packages())
{install_github(paste0('romanceline/',i))}
library(i, character.only = TRUE)
}
plain <- function(x,...) {
format(x, ..., scientific = FALSE, trim = TRUE,big.mark=" ")
}
runningdataset<-read.csv('qry_COVID_cases_by_date_final.CSV')
ListSheets<-excel_sheets('VariantData.xlsx')
variantdataset_UK<-read_excel('VariantData.xlsx', sheet = 'UK variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_UK)<-c('ADM0NAME','cases')
variantdataset_SA<-read_excel('VariantData.xlsx', sheet = 'SA variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_SA)<-c('ADM0NAME','cases')
variantdataset_Brazil<-read_excel('VariantData.xlsx', sheet = 'Brazilian variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_Brazil)<-c('ADM0NAME','cases')
EuroDataset<-GetEpiData() %>% mutate(ADM0NAME=str_to_title(ADM0NAME))
CurrentDate<-max(EuroDataset$DateReport)
EuroDataset_Today<-EuroDataset %>% filter(DateReport==CurrentDate)
HQDataset<-read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv',fileEncoding="UTF-8-BOM")
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate)
TotalCasesToday_EU<-plain(sum(EuroDataset_Today$NewCases))
TotalDeathsToday_EU<-plain(sum(EuroDataset_Today$NewDeaths))
NbCountriesCasesToday_EU<-nrow(EuroDataset_Today %>% filter(NewCases!=0))
CountriesMore5000Cases_EU<-EuroDataset_Today %>% filter(NewCases>=5000) %>%
arrange(desc(NewCases)) %>% mutate(NewCases=plain(NewCases))
NbCountriesMore5000Cases_EU<-nrow(CountriesMore5000Cases_EU)
ListCountriesOver5000Cases<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore5000Cases_EU-1,1)){
txt_<-paste0(CountriesMore5000Cases_EU$ADM0NAME[i],' (',CountriesMore5000Cases_EU$NewCases[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore5000Cases_EU$ADM0NAME[NbCountriesMore5000Cases_EU],' (',CountriesMore5000Cases_EU$NewCases[NbCountriesMore5000Cases_EU],')')
return(txt)
}
CountriesMore100Deaths_EU<-EuroDataset_Today %>% filter(NewDeaths>=100) %>% arrange(desc(NewDeaths)) %>%
mutate(NewDeaths=plain(NewDeaths))
NbCountriesMore100Deaths_EU<-nrow(CountriesMore100Deaths_EU)
ListCountriesOver100Deaths<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore100Deaths_EU-1,1)){
txt_<-paste0(CountriesMore100Deaths_EU$ADM0NAME[i],' (',CountriesMore100Deaths_EU$NewDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore100Deaths_EU$ADM0NAME[NbCountriesMore100Deaths_EU],' (',CountriesMore100Deaths_EU$NewDeaths[NbCountriesMore100Deaths_EU],')')
return(txt)
}
SummTable_EU<-SummaryTable(runningdataset)
Top10Countries_7DaysIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(SvnDaysIncidence_Latest)) %>%
mutate(SvnDaysIncidence_Latest=plain(SvnDaysIncidence_Latest))
TopCountries_CumCases_EU<-SummTable %>%
arrange(desc(TotalCases)) %>%
mutate(TotalCases=plain(TotalCases))
Top10Countries_CumIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(CumulativeIncidence)) %>%
mutate(CumulativeIncidence=plain(CumulativeIncidence))
TotalCases_EU<-plain(sum(SummTable_EU$TotalCases))
TotalCases_HQ<-plain(sum(HQDataset_Today$Cumulative_cases))
Share_EU_Cases<-round(sum(SummTable_EU$TotalCases)/sum(HQDataset_Today$Cumulative_cases)*100,0)
TotalDeaths_EU<-plain(sum(SummTable_EU$TotalDeaths))
TotalDeaths_HQ<-plain(sum(HQDataset_Today$Cumulative_deaths))
Share_EU_Deaths<-round(sum(SummTable_EU$TotalDeaths)/sum(HQDataset_Today$Cumulative_deaths)*100,0)
Top3_CumCases_HQ<-HQDataset_Today %>%
arrange(desc(Cumulative_cases)) %>%
top_n(3,Cumulative_cases) %>%
mutate(Cumulative_cases=plain(Cumulative_cases))
CountriesOver30000Deaths_EU<-SummTable %>%
filter(TotalDeaths>=30000) %>% arrange(desc(TotalDeaths)) %>%
mutate(TotalDeaths=plain(TotalDeaths))
Nb_CountriesOver30000Deaths_EU<-nrow(CountriesOver30000Deaths_EU)
ListCountriesOver30000Deaths<-function(){
txt<-as.character()
for (i in seq(1,Nb_CountriesOver30000Deaths_EU-1,1)){
txt_<-paste0(CountriesOver30000Deaths_EU$ADM0NAME[i],' (',CountriesOver30000Deaths_EU$TotalDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesOver30000Deaths_EU$ADM0NAME[Nb_CountriesOver30000Deaths_EU],' (',CountriesOver30000Deaths_EU$TotalDeaths[Nb_CountriesOver30000Deaths_EU],')')
return(txt)
}
NbCountries_VariantUK<-nrow(variantdataset_UK %>% filter(!is.na(cases)))
NbCountries_VariantSA<-nrow(variantdataset_SA %>% filter(!is.na(cases)))
NbCountries_VariantBrazil<-nrow(variantdataset_Brazil %>% filter(!is.na(cases)))
TotalCases_VariantUK<-plain(sum(variantdataset_UK$cases,na.rm=TRUE))
TotalCases_VariantSA<-plain(sum(variantdataset_SA$cases,na.rm=TRUE))
TotalCases_VariantBrazil<-plain(sum(variantdataset_Brazil$cases,na.rm=TRUE))
render("DailyList.Rmd",output_file=paste0('DailyList_',CurrentDate))
sum(HQDataset_Today$Cumulative_cases)
HQDataset<-read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv',fileEncoding="UTF-8-BOM")
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate)
CurrentDate
CurrentDate<-format(max(EuroDataset$DateReport),"%Y-%m-%d)
CurrentDate<-format(max(EuroDataset$DateReport),"%Y-%m-%d")
CurrentDate
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate)
PackagesToInstall_CRAN<-c('dplyr','markdown','readxl','devtools')
for (i in PackagesToInstall_CRAN) {
print(i)
if (!i %in% installed.packages())
{install.packages(i)}
library(i, character.only = TRUE)
}
PackagesToInstall_Custom<-c('WHOCountryNames','SummaryTable')
for (i in PackagesToInstall_Custom) {
print(i)
if (!i %in% installed.packages())
{install_github(paste0('romanceline/',i))}
library(i, character.only = TRUE)
}
plain <- function(x,...) {
format(x, ..., scientific = FALSE, trim = TRUE,big.mark=" ")
}
runningdataset<-read.csv('qry_COVID_cases_by_date_final.CSV')
ListSheets<-excel_sheets('VariantData.xlsx')
variantdataset_UK<-read_excel('VariantData.xlsx', sheet = 'UK variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_UK)<-c('ADM0NAME','cases')
variantdataset_SA<-read_excel('VariantData.xlsx', sheet = 'SA variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_SA)<-c('ADM0NAME','cases')
variantdataset_Brazil<-read_excel('VariantData.xlsx', sheet = 'Brazilian variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_Brazil)<-c('ADM0NAME','cases')
EuroDataset<-GetEpiData() %>% mutate(ADM0NAME=str_to_title(ADM0NAME))
CurrentDate<-format(max(EuroDataset$DateReport),"%Y-%m-%d")
EuroDataset_Today<-EuroDataset %>% filter(DateReport==CurrentDate)
HQDataset<-read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv',fileEncoding="UTF-8-BOM")
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate)
TotalCasesToday_EU<-plain(sum(EuroDataset_Today$NewCases))
TotalDeathsToday_EU<-plain(sum(EuroDataset_Today$NewDeaths))
NbCountriesCasesToday_EU<-nrow(EuroDataset_Today %>% filter(NewCases!=0))
CountriesMore5000Cases_EU<-EuroDataset_Today %>% filter(NewCases>=5000) %>%
arrange(desc(NewCases)) %>% mutate(NewCases=plain(NewCases))
NbCountriesMore5000Cases_EU<-nrow(CountriesMore5000Cases_EU)
ListCountriesOver5000Cases<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore5000Cases_EU-1,1)){
txt_<-paste0(CountriesMore5000Cases_EU$ADM0NAME[i],' (',CountriesMore5000Cases_EU$NewCases[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore5000Cases_EU$ADM0NAME[NbCountriesMore5000Cases_EU],' (',CountriesMore5000Cases_EU$NewCases[NbCountriesMore5000Cases_EU],')')
return(txt)
}
CountriesMore100Deaths_EU<-EuroDataset_Today %>% filter(NewDeaths>=100) %>% arrange(desc(NewDeaths)) %>%
mutate(NewDeaths=plain(NewDeaths))
NbCountriesMore100Deaths_EU<-nrow(CountriesMore100Deaths_EU)
ListCountriesOver100Deaths<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore100Deaths_EU-1,1)){
txt_<-paste0(CountriesMore100Deaths_EU$ADM0NAME[i],' (',CountriesMore100Deaths_EU$NewDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore100Deaths_EU$ADM0NAME[NbCountriesMore100Deaths_EU],' (',CountriesMore100Deaths_EU$NewDeaths[NbCountriesMore100Deaths_EU],')')
return(txt)
}
SummTable_EU<-SummaryTable(runningdataset)
Top10Countries_7DaysIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(SvnDaysIncidence_Latest)) %>%
mutate(SvnDaysIncidence_Latest=plain(SvnDaysIncidence_Latest))
TopCountries_CumCases_EU<-SummTable %>%
arrange(desc(TotalCases)) %>%
mutate(TotalCases=plain(TotalCases))
Top10Countries_CumIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(CumulativeIncidence)) %>%
mutate(CumulativeIncidence=plain(CumulativeIncidence))
TotalCases_EU<-plain(sum(SummTable_EU$TotalCases))
TotalCases_HQ<-plain(sum(HQDataset_Today$Cumulative_cases))
Share_EU_Cases<-round(sum(SummTable_EU$TotalCases)/sum(HQDataset_Today$Cumulative_cases)*100,0)
TotalDeaths_EU<-plain(sum(SummTable_EU$TotalDeaths))
TotalDeaths_HQ<-plain(sum(HQDataset_Today$Cumulative_deaths))
Share_EU_Deaths<-round(sum(SummTable_EU$TotalDeaths)/sum(HQDataset_Today$Cumulative_deaths)*100,0)
Top3_CumCases_HQ<-HQDataset_Today %>%
arrange(desc(Cumulative_cases)) %>%
top_n(3,Cumulative_cases) %>%
mutate(Cumulative_cases=plain(Cumulative_cases))
CountriesOver30000Deaths_EU<-SummTable %>%
filter(TotalDeaths>=30000) %>% arrange(desc(TotalDeaths)) %>%
mutate(TotalDeaths=plain(TotalDeaths))
Nb_CountriesOver30000Deaths_EU<-nrow(CountriesOver30000Deaths_EU)
ListCountriesOver30000Deaths<-function(){
txt<-as.character()
for (i in seq(1,Nb_CountriesOver30000Deaths_EU-1,1)){
txt_<-paste0(CountriesOver30000Deaths_EU$ADM0NAME[i],' (',CountriesOver30000Deaths_EU$TotalDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesOver30000Deaths_EU$ADM0NAME[Nb_CountriesOver30000Deaths_EU],' (',CountriesOver30000Deaths_EU$TotalDeaths[Nb_CountriesOver30000Deaths_EU],')')
return(txt)
}
NbCountries_VariantUK<-nrow(variantdataset_UK %>% filter(!is.na(cases)))
NbCountries_VariantSA<-nrow(variantdataset_SA %>% filter(!is.na(cases)))
NbCountries_VariantBrazil<-nrow(variantdataset_Brazil %>% filter(!is.na(cases)))
TotalCases_VariantUK<-plain(sum(variantdataset_UK$cases,na.rm=TRUE))
TotalCases_VariantSA<-plain(sum(variantdataset_SA$cases,na.rm=TRUE))
TotalCases_VariantBrazil<-plain(sum(variantdataset_Brazil$cases,na.rm=TRUE))
render("DailyList.Rmd",output_file=paste0('DailyList_',CurrentDate))
ListCountriesOver5000Cases()
NbCountriesMore5000Cases_EU<-nrow(CountriesMore5000Cases_EU)
NbCountriesMore5000Cases_EU
CurrentDate<-max(EuroDataset$DateReport)
CurrentDate_<-format(CurrentDate,"%Y-%m-%d")
EuroDataset_Today<-EuroDataset %>% filter(DateReport==CurrentDate)
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate_)
PackagesToInstall_CRAN<-c('dplyr','markdown','readxl','devtools')
for (i in PackagesToInstall_CRAN) {
print(i)
if (!i %in% installed.packages())
{install.packages(i)}
library(i, character.only = TRUE)
}
PackagesToInstall_Custom<-c('WHOCountryNames','SummaryTable')
for (i in PackagesToInstall_Custom) {
print(i)
if (!i %in% installed.packages())
{install_github(paste0('romanceline/',i))}
library(i, character.only = TRUE)
}
plain <- function(x,...) {
format(x, ..., scientific = FALSE, trim = TRUE,big.mark=" ")
}
runningdataset<-read.csv('qry_COVID_cases_by_date_final.CSV')
ListSheets<-excel_sheets('VariantData.xlsx')
variantdataset_UK<-read_excel('VariantData.xlsx', sheet = 'UK variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_UK)<-c('ADM0NAME','cases')
variantdataset_SA<-read_excel('VariantData.xlsx', sheet = 'SA variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_SA)<-c('ADM0NAME','cases')
variantdataset_Brazil<-read_excel('VariantData.xlsx', sheet = 'Brazilian variant summary')[c(1:63),c(2,3)] %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
colnames(variantdataset_Brazil)<-c('ADM0NAME','cases')
EuroDataset<-GetEpiData() %>% mutate(ADM0NAME=str_to_title(ADM0NAME))
CurrentDate<-max(EuroDataset$DateReport)
CurrentDate_<-format(CurrentDate,"%Y-%m-%d")
EuroDataset_Today<-EuroDataset %>% filter(DateReport==CurrentDate)
HQDataset<-read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv',fileEncoding="UTF-8-BOM")
HQDataset_Today<-HQDataset %>% filter(Date_reported==CurrentDate_)
TotalCasesToday_EU<-plain(sum(EuroDataset_Today$NewCases))
TotalDeathsToday_EU<-plain(sum(EuroDataset_Today$NewDeaths))
NbCountriesCasesToday_EU<-nrow(EuroDataset_Today %>% filter(NewCases!=0))
CountriesMore5000Cases_EU<-EuroDataset_Today %>% filter(NewCases>=5000) %>%
arrange(desc(NewCases)) %>% mutate(NewCases=plain(NewCases))
NbCountriesMore5000Cases_EU<-nrow(CountriesMore5000Cases_EU)
ListCountriesOver5000Cases<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore5000Cases_EU-1,1)){
txt_<-paste0(CountriesMore5000Cases_EU$ADM0NAME[i],' (',CountriesMore5000Cases_EU$NewCases[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore5000Cases_EU$ADM0NAME[NbCountriesMore5000Cases_EU],' (',CountriesMore5000Cases_EU$NewCases[NbCountriesMore5000Cases_EU],')')
return(txt)
}
CountriesMore100Deaths_EU<-EuroDataset_Today %>% filter(NewDeaths>=100) %>% arrange(desc(NewDeaths)) %>%
mutate(NewDeaths=plain(NewDeaths))
NbCountriesMore100Deaths_EU<-nrow(CountriesMore100Deaths_EU)
ListCountriesOver100Deaths<-function(){
txt<-as.character()
for (i in seq(1,NbCountriesMore100Deaths_EU-1,1)){
txt_<-paste0(CountriesMore100Deaths_EU$ADM0NAME[i],' (',CountriesMore100Deaths_EU$NewDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesMore100Deaths_EU$ADM0NAME[NbCountriesMore100Deaths_EU],' (',CountriesMore100Deaths_EU$NewDeaths[NbCountriesMore100Deaths_EU],')')
return(txt)
}
SummTable_EU<-SummaryTable(runningdataset)
Top10Countries_7DaysIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(SvnDaysIncidence_Latest)) %>%
mutate(SvnDaysIncidence_Latest=plain(SvnDaysIncidence_Latest))
TopCountries_CumCases_EU<-SummTable %>%
arrange(desc(TotalCases)) %>%
mutate(TotalCases=plain(TotalCases))
Top10Countries_CumIncidence_EU<-SummTable %>%
filter(ADM0NAME!='Andorra' &
ADM0NAME!='Cyprus'&
ADM0NAME!='Estonia'&
ADM0NAME!='Iceland'&
ADM0NAME!='Latvia'&
ADM0NAME!='Luxembourg'&
ADM0NAME!='Malta'&
ADM0NAME!='Monaco'&
ADM0NAME!='Montenegro'&
ADM0NAME!='San Marino'&
ADM0NAME!='Slovenia'&
ADM0NAME!='Gibraltar') %>%
arrange(desc(CumulativeIncidence)) %>%
mutate(CumulativeIncidence=plain(CumulativeIncidence))
TotalCases_EU<-plain(sum(SummTable_EU$TotalCases))
TotalCases_HQ<-plain(sum(HQDataset_Today$Cumulative_cases))
Share_EU_Cases<-round(sum(SummTable_EU$TotalCases)/sum(HQDataset_Today$Cumulative_cases)*100,0)
TotalDeaths_EU<-plain(sum(SummTable_EU$TotalDeaths))
TotalDeaths_HQ<-plain(sum(HQDataset_Today$Cumulative_deaths))
Share_EU_Deaths<-round(sum(SummTable_EU$TotalDeaths)/sum(HQDataset_Today$Cumulative_deaths)*100,0)
Top3_CumCases_HQ<-HQDataset_Today %>%
arrange(desc(Cumulative_cases)) %>%
top_n(3,Cumulative_cases) %>%
mutate(Cumulative_cases=plain(Cumulative_cases))
CountriesOver30000Deaths_EU<-SummTable %>%
filter(TotalDeaths>=30000) %>% arrange(desc(TotalDeaths)) %>%
mutate(TotalDeaths=plain(TotalDeaths))
Nb_CountriesOver30000Deaths_EU<-nrow(CountriesOver30000Deaths_EU)
ListCountriesOver30000Deaths<-function(){
txt<-as.character()
for (i in seq(1,Nb_CountriesOver30000Deaths_EU-1,1)){
txt_<-paste0(CountriesOver30000Deaths_EU$ADM0NAME[i],' (',CountriesOver30000Deaths_EU$TotalDeaths[i],'), ')
txt<-paste0(txt,txt_)}
txt<-paste0(txt,' and ',CountriesOver30000Deaths_EU$ADM0NAME[Nb_CountriesOver30000Deaths_EU],' (',CountriesOver30000Deaths_EU$TotalDeaths[Nb_CountriesOver30000Deaths_EU],')')
return(txt)
}
NbCountries_VariantUK<-nrow(variantdataset_UK %>% filter(!is.na(cases)))
NbCountries_VariantSA<-nrow(variantdataset_SA %>% filter(!is.na(cases)))
NbCountries_VariantBrazil<-nrow(variantdataset_Brazil %>% filter(!is.na(cases)))
TotalCases_VariantUK<-plain(sum(variantdataset_UK$cases,na.rm=TRUE))
TotalCases_VariantSA<-plain(sum(variantdataset_SA$cases,na.rm=TRUE))
TotalCases_VariantBrazil<-plain(sum(variantdataset_Brazil$cases,na.rm=TRUE))
render("DailyList.Rmd",output_file=paste0('DailyList_',CurrentDate))
plain(sum(SummTable_EU$TotalCases))
getwd()
setwd('C:/Users/romanc/Documents/GitHub/Packages/SummaryTable')
document()
rm(list = c("SummaryTable")
rm(list = c("SummaryTable"))
document()
