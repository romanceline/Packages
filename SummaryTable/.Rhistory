DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1)) %>%
filter(ADM0NAME %in% unique(StringencyIndex$ADM0NAME))
View(MainDataset)
MainDataset<-read.csv(paste0(folderCleanData,"/qry_covid_running_cases_country_date.CSV")) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME),
DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1)) %>%
filter(ADM0NAME %in% unique(StringencyIndex$ADM0NAME)) %>%
mutate(NewCases = replace_na(NewCases, 0),
NewDeaths = replace_na(NewDeaths, 0),
TotalCases = replace_na(TotalCases, 0),
TotalDeaths = replace_na(TotalDeaths, 0))
MainDataset<-read.csv(paste0(folderCleanData,"/qry_covid_running_cases_country_date.CSV")) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME),
DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1))
View(MainDataset)
MainDataset<-MainDataset %>% mutate(NewCases=replace_na(NewCases,0))
MainDataset<-MainDataset %>% mutate(NewCases=replace_na(0))
MainDataset<-MainDataset %>% mutate_all(~replace(NewCases, is.na(NewCases), 0))
MainDataset<-read.csv(paste0(folderCleanData,"/qry_covid_running_cases_country_date.CSV")) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME),
DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1))
MainDataset<-MainDataset %>% mutate(~replace(NewCases, is.na(NewCases), 0))
MainDataset<-read.csv(paste0(folderCleanData,"/qry_covid_running_cases_country_date.CSV")) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME),
DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1)) %>%
filter(ADM0NAME %in% unique(StringencyIndex$ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1)) %>%
filter(ADM0NAME %in% unique(StringencyIndex$ADM0NAME)) %>%
mutate(NewCases = if_else(is.na(NewCases),0,NewCases))
View(MainDataset)
MainDataset<-read.csv(paste0(folderCleanData,"/qry_covid_running_cases_country_date.CSV")) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME),
DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1)) %>%
filter(ADM0NAME %in% unique(StringencyIndex$ADM0NAME)) %>%
mutate(NewCases = if_else(is.na(NewCases),0,NewCases),
NewDeaths = if_else(is.na(NewDeaths),0,NewDeaths),
TotalCases = if_else(is.na(TotalCases),0,TotalCases),
TotalDeaths = if_else(is.na(TotalDeaths),0,TotalDeaths))
MainDataset<-read.csv(paste0(folderCleanData,"/qry_covid_running_cases_country_date.CSV")) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME),
DateReport1=as.Date(parse_date_time(DateReport1,c("dmy", "ymd","mdy")))) %>%
mutate(ADM0NAME=if_else(ADM0NAME=='Kosovo','Kosovo(1)',ADM0NAME))
MainDataset<-MainDataset %>%
merge(StringencyIndex,by.x=c('DateReport1','ADM0NAME'),by.y=c('Date','ADM0NAME'),all=TRUE) %>%
filter(!is.na(DateReport1)) %>%
filter(ADM0NAME %in% unique(StringencyIndex$ADM0NAME)) %>%
mutate(NewCases = if_else(is.na(NewCases),0,NewCases),
NewDeaths = if_else(is.na(NewDeaths),0,NewDeaths),
TotalCases = if_else(is.na(TotalCases),0,TotalCases),
TotalDeaths = if_else(is.na(TotalDeaths),0,TotalDeaths)) %>%
#left_join(StringencyIndex,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_SeverityIndex,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_Masks,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_Schools,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_Businesses,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_Borders,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_Gatherings,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date")) %>%
left_join(KeyDates_Movements,by=c("ADM0NAME" = "ADM0NAME", "DateReport1" = "Date"))
RelativeDays<-function(ctr){
DatasetCountry<-MainDataset %>% filter(ADM0NAME==ctr)
minDateAll<-min((DatasetCountry %>% filter(!is.na(Narrative_All)))$DateReport1)
minDateSchools<-min((DatasetCountry %>% filter(!is.na(Narrative_Schools)))$DateReport1)
minDateMasks<-min((DatasetCountry %>% filter(!is.na(Narrative_Masks)))$DateReport1)
minDateGatherings<-min((DatasetCountry %>% filter(!is.na(Narrative_Gatherings)))$DateReport1)
minDateBusinesses<-min((DatasetCountry %>% filter(!is.na(Narrative_Businesses)))$DateReport1)
minDateBorders<-min((DatasetCountry %>% filter(!is.na(Narrative_Borders)))$DateReport1)
minDateMovements<-min((DatasetCountry %>% filter(!is.na(Narrative_Movements)))$DateReport1)
DatasetCountry<-DatasetCountry %>% mutate(Days_All=DateReport1-minDateAll) %>%
mutate(Days_Schools=as.numeric(DateReport1-minDateSchools)) %>%
mutate(Days_Masks=as.numeric(DateReport1-minDateMasks)) %>%
mutate(Days_Gatherings=as.numeric(DateReport1-minDateGatherings)) %>%
mutate(Days_Movements=as.numeric(DateReport1-minDateMovements)) %>%
mutate(Days_Borders=as.numeric(DateReport1-minDateBorders)) %>%
mutate(Days_Businesses=as.numeric(DateReport1-minDateBusinesses))
return(DatasetCountry)
}
BuildNewDataset<-function(ctr){
CountryDataset<-RelativeDays(ctr)
CountryDataset<-CountryDataset %>%
mutate(ThreeDaysAverage_Cases=(NewCases+lag(NewCases,1)+lead(NewCases,1))/3,
ThreeDaysAverage_Deaths=(NewDeaths+lag(NewDeaths,1)+lead(NewDeaths,1))/3)
CountryDataset_<-CountryDataset %>% select(-c("WHO_Code","TotalCases","TotalDeaths","epiWeek")) %>%
mutate(log10_MovingAverage_Cases=log10(ThreeDaysAverage_Cases),
log10_MovingAverage_Deaths=log10(ThreeDaysAverage_Deaths))
return(CountryDataset_)
}
DatasetToSmooth<-function(ctr){
CountryDataset<-BuildNewDataset(ctr)
CountryDataset<-CountryDataset %>% mutate(log_cases=log10(NewCases),log_deaths=log10(NewDeaths))
return(CountryDataset)}
DatasetWithSplineValues<-function(ctr){
CountryDataset<-DatasetToSmooth(ctr)
CountryDataset_Cases<-DatasetToSmooth(ctr) %>% filter(!is.na(ThreeDaysAverage_Cases)) %>% select(DateReport1,ThreeDaysAverage_Cases)
CountryDataset_Deaths<-DatasetToSmooth(ctr) %>% filter(!is.na(ThreeDaysAverage_Deaths)) %>% select(DateReport1,ThreeDaysAverage_Deaths)
CountryDataset_logCases<-DatasetToSmooth(ctr) %>% filter(!is.na(log10_MovingAverage_Cases)) %>%
select(DateReport1,log10_MovingAverage_Cases) %>% filter(log10_MovingAverage_Cases!=-Inf)
CountryDataset_logDeaths<-DatasetToSmooth(ctr) %>% filter(!is.na(log10_MovingAverage_Deaths)) %>%
select(DateReport1,log10_MovingAverage_Deaths) %>% filter(log10_MovingAverage_Deaths!=-Inf)
Spline_3DaysAverageCases<-smooth.spline(x=CountryDataset_Cases$DateReport1,y=CountryDataset_Cases$ThreeDaysAverage_Cases,spar=0.5)
Spline_3DaysAverageDeaths<-smooth.spline(x=CountryDataset_Deaths$DateReport1,y=CountryDataset_Deaths$ThreeDaysAverage_Deaths,spar=0.5)
Spline_3DaysAverage_LogCases<-smooth.spline(x=CountryDataset_logCases$DateReport1,y=CountryDataset_logCases$log10_MovingAverage_Cases,spar=0.5)
Spline_3DaysAverage_LogDeaths<-smooth.spline(x=CountryDataset_logDeaths$DateReport1,y=CountryDataset_logDeaths$log10_MovingAverage_Deaths,spar=0.5)
ValuesSpline_3DaysAverageCases<-data.frame(SplineValue_3DaysAverageCases=predict(Spline_3DaysAverageCases,deriv=0))
ValuesSpline_3DaysAverageDeaths<-data.frame(SplineValue_3DaysAverageDeaths=predict(Spline_3DaysAverageDeaths,deriv=0))
ValuesSpline_3DaysAverage_LogCases<-data.frame(SplineValue_3DaysAverage_LogCases=predict(Spline_3DaysAverage_LogCases,deriv=0))
ValuesSpline_3DaysAverage_LogDeaths<-data.frame(SplineValue_3DaysAverage_LogDeaths=predict(Spline_3DaysAverage_LogDeaths,deriv=0))
CountryDataset_Cases<-data.frame(CountryDataset_Cases,ValuesSpline_3DaysAverageCases) %>%
select(DateReport1,"Spline_3DaysAverageCases"="SplineValue_3DaysAverageCases.y")
CountryDataset_Deaths<-data.frame(CountryDataset_Deaths,ValuesSpline_3DaysAverageDeaths) %>%
select(DateReport1,"Spline_3DaysAverageDeaths"="SplineValue_3DaysAverageDeaths.y")
CountryDataset_logCases<-data.frame(CountryDataset_logCases,ValuesSpline_3DaysAverage_LogCases) %>%
select(DateReport1,"Spline_3DaysAverage_logCases"="SplineValue_3DaysAverage_LogCases.y")
CountryDataset_logDeaths<-data.frame(CountryDataset_logDeaths,ValuesSpline_3DaysAverage_LogDeaths) %>%
select(DateReport1,"Spline_3DaysAverage_logDeaths"="SplineValue_3DaysAverage_LogDeaths.y")
CountryDataset_<-CountryDataset %>%
left_join(CountryDataset_Cases,by='DateReport1') %>%
left_join(CountryDataset_Deaths,by='DateReport1') %>%
left_join(CountryDataset_logCases,by='DateReport1') %>%
left_join(CountryDataset_logDeaths,by='DateReport1')
x <- zoo(CountryDataset_$Spline_3DaysAverage_logCases,CountryDataset_$DateReport1)
x <- na_interpolation(x, option = "linear") %>% fortify.zoo
y <- zoo(CountryDataset_$Spline_3DaysAverage_logDeaths,CountryDataset_$DateReport1)
y <- na_interpolation(y, option = "linear") %>% fortify.zoo
CountryDataset_<-CountryDataset_ %>% left_join(x,by=c('DateReport1'='Index')) %>% rename(Spline_3DaysAverage_logCases_='.')
CountryDataset_<-CountryDataset_ %>% left_join(y,by=c('DateReport1'='Index')) %>% rename(Spline_3DaysAverage_logDeaths_='.')
return(CountryDataset_)
}
CheckAtLeast4Values<-function(){
ListCountriesOkToSpline<-data.frame()
for (ctr in unique(MainDataset$ADM0NAME)){
CountryDataset<-MainDataset %>% filter(ADM0NAME==ctr)
CountryDataset<-CountryDataset %>% filter(NewDeaths!=0)
if ((nrow(CountryDataset)) > 3){
ListCountriesOkToSpline<-c(ctr,ListCountriesOkToSpline)}
}
return(ListCountriesOkToSpline)}
GlobalDataset_<-data.frame()
for (ctr in CheckAtLeast4Values()){
GlobalDataset<-DatasetWithSplineValues(ctr)
GlobalDataset_<-bind_rows(GlobalDataset_,GlobalDataset)
}
write.csv(GlobalDataset_,paste0(folderCleanData,'/GlobalDataset.csv'))
shiny::runApp('GitHub/Shiny_PHSM/app_multiple')
runApp('GitHub/Shiny_PHSM/app_single')
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
#
Bloc_A<-read_html(links[1]) %>%
html_nodes('#leftContent > div:nth-child(3) > div.descriptionList > h2 > a') %>%
html_text()
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
links
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 24]
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
#
Bloc_A<-read_html(links[24]) %>%
html_nodes('#leftContent > div:nth-child(3) > div.descriptionList > h2 > a') %>%
html_text()
Bloc_A
links[24]
Bloc_A<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(5)') %>%
html_text()
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-as.numeric(gsub(".",'',TotalTests,fixed=TRUE))
TotalCases<-ex_between(Bloc_A,'Raste pozitive','Raste')[[1]]
TotalCases<-as.numeric(gsub(".",'',TotalCases,fixed=TRUE))
TotalDeaths<-str_extract(Bloc_A, "(?i)(?<=Humbje jete\\D)\\d+")
TotalDeaths<-as.numeric(gsub(".",'',TotalDeaths,fixed=TRUE))
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')
TotalTests
Bloc_A
Bloc_A<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(5)') %>%
html_text()
Bloc_A
Bloc_A<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(6)') %>%
html_text()
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-as.numeric(gsub(".",'',TotalTests,fixed=TRUE))
TotalCases<-ex_between(Bloc_A,'Raste pozitive','Raste')[[1]]
TotalCases<-as.numeric(gsub(".",'',TotalCases,fixed=TRUE))
TotalDeaths<-str_extract(Bloc_A, "(?i)(?<=Humbje jete\\D)\\d+")
TotalDeaths<-as.numeric(gsub(".",'',TotalDeaths,fixed=TRUE))
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
gsub(".",'',TotalTests,fixed=TRUE)
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-as.numeric(gsub(",",'',TotalTests,fixed=TRUE))
TotalCases<-ex_between(Bloc_A,'Raste pozitive','Raste')[[1]]
TotalCases<-as.numeric(gsub(",",'',TotalCases,fixed=TRUE))
TotalDeaths<-str_extract(Bloc_A, "(?i)(?<=Humbje jete\\D)\\d+")
TotalDeaths<-as.numeric(gsub(",",'',TotalDeaths,fixed=TRUE))
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-as.numeric(gsub(",",'',TotalTests,fixed=TRUE))
TotalCases<-ex_between(Bloc_A,'Raste pozitive','Raste')[[1]]
TotalCases<-as.numeric(gsub(",",'',TotalCases,fixed=TRUE))
TotalDeaths<-str_extract(Bloc_A, "(?i)(?<=Humbje jete\\D)\\d+")
TotalDeaths<-as.numeric(gsub(",",'',TotalDeaths,fixed=TRUE))
Bloc_B<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(5)') %>%
html_text()
Bloc_A
Numbers_BlocB<-regmatches(Bloc_B, gregexpr("[[:digit:]]+", Bloc_B)) %>% as.data.frame()
NewCases<-as.numeric(Numbers_BlocB[4,1])
NewDeaths<-NewCases<-as.numeric(Numbers_BlocB[9,1])
Hosp_occ<-ex_between(Bloc_B,'spitale','Humbje')[[1]]
Hosp_occ<-as.numeric(gsub(".",'',Hosp_occ,fixed=TRUE))
NewTests<-str_extract(Bloc_B, "(?i)(?<=ditore\\D)\\d+")
NewTests<-as.numeric(gsub(".",'',NewTests,fixed=TRUE))
Numbers_BlocB<-regmatches(Bloc_B, gregexpr("[[:digit:]]+", Bloc_B)) %>% as.data.frame()
Numbers_BlocB
NewCases<-as.numeric(Numbers_BlocB[4,1])
NewDeaths<-NewCases<-as.numeric(Numbers_BlocB[9,1])
Hosp_occ<-ex_between(Bloc_B,'spitale','Humbje')[[1]]
Hosp_occ<-as.numeric(gsub(".",'',Hosp_occ,fixed=TRUE))
NewTests<-str_extract(Bloc_B, "(?i)(?<=ditore\\D)\\d+")
NewTests<-as.numeric(gsub(".",'',NewTests,fixed=TRUE))
NewCases<-as.numeric(Numbers_BlocB[4,1])
NewDeaths<-as.numeric(Numbers_BlocB[9,1])
Hosp_occ<-ex_between(Bloc_B,'spitale','Humbje')[[1]]
Hosp_occ<-as.numeric(gsub(".",'',Hosp_occ,fixed=TRUE))
NewTests<-str_extract(Bloc_B, "(?i)(?<=ditore\\D)\\d+")
NewTests<-as.numeric(gsub(".",'',NewTests,fixed=TRUE))
Numbers_BlocB
Hosp_occ<-as.numeric(Numbers_BlocB[7,1])
NewTests<-as.numeric(Numbers_BlocB[10,1])
Bloc_C<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(4)') %>%
html_text()
Bloc_C<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(4)') %>%
html_text()
ICU_occ<-ex_between(Bloc_C, 'pacientë, ','në terapi intensive')[[1]]
ICU_occ<-as.numeric(gsub(".",'',ICU_occ,fixed=TRUE))
Data_Albania<-function(){
#
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
#
Bloc_A<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(6)') %>%
html_text()
#
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-as.numeric(gsub(",",'',TotalTests,fixed=TRUE))
TotalCases<-ex_between(Bloc_A,'Raste pozitive','Raste')[[1]]
TotalCases<-as.numeric(gsub(",",'',TotalCases,fixed=TRUE))
TotalDeaths<-str_extract(Bloc_A, "(?i)(?<=Humbje jete\\D)\\d+")
TotalDeaths<-as.numeric(gsub(",",'',TotalDeaths,fixed=TRUE))
#
Bloc_B<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(5)') %>%
html_text()
Numbers_BlocB<-regmatches(Bloc_B, gregexpr("[[:digit:]]+", Bloc_B)) %>% as.data.frame()
NewCases<-as.numeric(Numbers_BlocB[4,1])
NewDeaths<-as.numeric(Numbers_BlocB[9,1])
Hosp_occ<-as.numeric(Numbers_BlocB[7,1])
NewTests<-as.numeric(Numbers_BlocB[10,1])
Bloc_C<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(4)') %>%
html_text()
ICU_occ<-ex_between(Bloc_C, 'pacientë, ','në terapi intensive')[[1]]
ICU_occ<-as.numeric(gsub(".",'',ICU_occ,fixed=TRUE))
return(data.frame(ADM0NAME='Albania',
UpdateDate=UpdateDate,
TotalCases=TotalCases,
NewCases=NewCases,
TotalDeaths=TotalDeaths,
NewDeaths=NewDeaths,
NewTests=NewTests,
TotalTests=TotalTests,
Hosp_occ=Hosp_occ,
ICU_occ=ICU_occ))
}
Data_Albania()
Data_Albania<-function(){
#
url <- "https://shendetesia.gov.al/category/lajme/"
html <- paste(readLines(url), collapse="\n")
matched <- str_match_all(html, "<a href=\"(.*?)\"")
links <- matched[[1]][, 2]
#
Bloc_A<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(6)') %>%
html_text()
#
TotalTests<-ex_between(Bloc_A,'Testime totale','Raste pozitive')[[1]]
TotalTests<-as.numeric(gsub(",",'',TotalTests,fixed=TRUE))
TotalCases<-ex_between(Bloc_A,'Raste pozitive','Raste')[[1]]
TotalCases<-as.numeric(gsub(",",'',TotalCases,fixed=TRUE))
TotalDeaths<-str_extract(Bloc_A, "(?i)(?<=Humbje jete\\D)\\d+")
TotalDeaths<-as.numeric(gsub(",",'',TotalDeaths,fixed=TRUE))
#
Bloc_B<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(5)') %>%
html_text()
Numbers_BlocB<-regmatches(Bloc_B, gregexpr("[[:digit:]]+", Bloc_B)) %>% as.data.frame()
NewCases<-as.numeric(Numbers_BlocB[4,1])
NewDeaths<-as.numeric(Numbers_BlocB[9,1])
Hosp_occ<-as.numeric(Numbers_BlocB[7,1])
NewTests<-as.numeric(Numbers_BlocB[10,1])
Bloc_C<-read_html(links[24]) %>%
html_nodes('#leftContent > div > div.detailsNewsContainer > div.pageDescription > p:nth-child(4)') %>%
html_text()
ICU_occ<-ex_between(Bloc_C, 'pacientë, ','në terapi intensive')[[1]]
ICU_occ<-as.numeric(gsub(".",'',ICU_occ,fixed=TRUE))
return(data.frame(ADM0NAME='Albania',
TotalCases=TotalCases,
NewCases=NewCases,
TotalDeaths=TotalDeaths,
NewDeaths=NewDeaths,
NewTests=NewTests,
TotalTests=TotalTests,
Hosp_occ=Hosp_occ,
ICU_occ=ICU_occ))
}
DataAlbania()
Data_Albania()
Data_Andorra<-function(){
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes(xpath='/html/body/div[1]/div[2]') %>%
html_text()
}
Bloc_A<-read_html(path) %>%
html_nodes(xpath='body > div:nth-child(1)') %>%
html_table()
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes(xpath='body > div:nth-child(1)') %>%
html_table()
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes(xpath='body > div:nth-child(1)') %>%
html_text()
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1)') %>%
html_text()
Bloc_A
Numbers_BlocA<-regmatches(Bloc_A, gregexpr("[[:digit:]]+", Bloc_A)) %>% as.data.frame()
View(Numbers_BlocA)
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1)') %>%
html_text()
Numbers_BlocA<-regmatches(Bloc_A, gregexpr("[[:digit:]]+", Bloc_A)) %>% as.data.frame()
Bloc_A
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1) > div:nth-child(2)') %>%
html_text()
Numbers_BlocA<-regmatches(Bloc_A, gregexpr("[[:digit:]]+", Bloc_A)) %>% as.data.frame()
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1) > div:nth-child(2)') %>%
html_text()
Data_Andorra<-function(){
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1) > div:nth-child(2)') %>%
html_text()
Numbers_BlocA<-regmatches(Bloc_A, gregexpr("[[:digit:]]+", Bloc_A)) %>% as.data.frame()
}
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1) > div:nth-child(2)') %>%
html_text()
path<-'https://www.govern.ad/coronavirus'
Bloc_A<-read_html(path) %>%
html_nodes('body > div:nth-child(1) > div:nth-child(2) > div:nth-child(2) > div') %>%
html_text()
Numbers_BlocA<-regmatches(Bloc_A, gregexpr("[[:digit:]]+", Bloc_A)) %>% as.data.frame()
Data_Austria<-function(){
Bloc_A<-read_html("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html") %>%
html_nodes('.table > tbody:nth-child(2) > tr:nth-child(1) > td:nth-child(11)') %>%
html_text()
TotalCases<-as.numeric(gsub(".",'',Bloc_A[1],fixed=TRUE))
Bloc_B<-read_html("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html") %>%
html_nodes('.table > tbody:nth-child(2) > tr:nth-child(2) > td:nth-child(11)') %>%
html_text()
TotalDeaths<-as.numeric(gsub('.','',Bloc_B[1],fixed=TRUE))
Bloc_C<-read_html("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html") %>%
html_nodes('#content > div.table-responsive > table > tbody > tr:nth-child(1) > th') %>%
html_text()
UpdateDate<-as.Date(strapplyc(Bloc_C, "[0-9.]{8,}", simplify = TRUE),format="%d.%m.%y")
Bloc_D<-read_html("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html") %>%
html_nodes('#content > div.table-responsive > table > tbody > tr:nth-child(4) > td:nth-child(11)') %>%
html_text()
Hosp_occ<-as.numeric(gsub('.','',Bloc_D[1],fixed=TRUE))
Bloc_E<-read_html("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html") %>%
html_nodes('#content > div.table-responsive > table > tbody > tr:nth-child(5) > td:nth-child(11)') %>%
html_text()
ICU_occ<-as.numeric(gsub('.','',Bloc_E[1],fixed=TRUE))
Bloc_F<-read_html("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html") %>%
html_nodes('#content > div.table-responsive > table > tbody > tr:nth-child(6) > td:nth-child(11)') %>%
html_text()
TotalTests<-as.numeric(gsub('.','',Bloc_F[1],fixed=TRUE))
return(data.frame(ADM0NAME='Austria',
UpdateDate=UpdateDate,
TotalCases=TotalCases,
TotalDeaths=TotalDeaths,
TotalTests=TotalTests,
Hosp_occ=Hosp_occ,
ICU_occ=ICU_occ))
}
Data_Austria()
devtools::install_github("whocov/phifunc", auth_token = "7fb165f058a1f42c930f75328578253e08028453", subdir = "phifunc", dep = FALSE)
library(phifunc)
pull_euro_weekly_comb()
library(xlsx)
library(dplyr)
library(tidyverse)
library(scales)
library(rmarkdown)
library(tibble)
#devtools::install_github("whocov/phifunc", auth_token = "7fb165f058a1f42c930f75328578253e08028453", subdir = "phifunc", dep = FALSE)
library(phifunc)
library(readxl)
library(cowplot)
library(ISOweek)
library(httr) # for working with APIs
library(jsonlite) #for working with APIs
library(openxlsx)
library(rvest)
agg_data1 <- pull_euro_weekly()
source(here::here("core_logic", "pull_data.R"), local = TRUE)
here::here("core_logic", "pull_data.R")
getwd()
setwd('C:/Users/romanc/Documents/GitHub/Packages/SummaryTable')
setwd('..')
getwd()
install('SummaryTable')
library(devtools)
install('SummaryTable')
library('SummaryTable')
dataset<-'C:/Users/romanc/Documents/GitHub/Packages/SummaryTable/qry_COVID_cases_by_date_final.csv'
SummaryTable(dataset)
EuroDataset<-GetEpiData() %>%
mutate(DateReport=as.Date(DateReport),ADM0NAME=str_to_title(ADM0NAME))
Dataset_Epiforecast_ <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv") %>%
filter(type=='estimate')
Rt_country<-function(ctr){
Dataset_Epiforecast_Country<-Dataset_Epiforecast_ %>% filter(country==ctr)
MaxDate<-max(Dataset_Epiforecast_Country$date)
DataMaxDate<-Dataset_Epiforecast_Country %>% filter(date==MaxDate)
return(DataMaxDate)
}
GlobalRtDataset<-data.frame()
for (ctr in unique(Dataset_Epiforecast_$country)){
GlobalRtDataset_<-Rt_country(ctr)
GlobalRtDataset<-bind_rows(GlobalRtDataset,GlobalRtDataset_)
}
Dataset_Epiforecast <- GlobalRtDataset %>%
select(ADM0NAME="country", Last_Update='date',RO='median',CI_low='lower_90', CI_up='upper_90') %>%
mutate(Trend=if_else(CI_low<1 & CI_up<1,"Decreasing",if_else(CI_low<=1 & CI_up>=1,"Stable","Increasing"))) %>%
WHOCountryNames(ADM0NAME)
Dataset_GlobalPopulation <- PopulationData %>% mutate(ADM0NAME=str_to_title(ADM0NAME))
#This will need to change at some point
Dataset_LastReportingDate<-data.frame(ADM0NAME=unique(MainDataset$ADM0NAME),
LastUpdate=Sys.Date())
Dataset_LastReportingDate<-data.frame(ADM0NAME=unique(EURODataset$ADM0NAME),
LastUpdate=Sys.Date())
Dataset_LastReportingDate<-data.frame(ADM0NAME=unique(EuroDataset$ADM0NAME),
LastUpdate=Sys.Date())
getwd()
setwd('C:/Users/romanc/Documents/GitHub/Packages/SummaryTable')
document()
document()
