who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:='Czechia' ~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname(dataset,country)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:='Czechia' :~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname(dataset,country)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:=='Czechia' :~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:=='Czechia' ~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:='Czechia' ~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname(dataset,country)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield==:'Czechia' ~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:=='Czechia' ~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
countryfield<-country
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:='Czechia' ~ 'Czech Republic'))
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield:='Czechia' :~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname(dataset,country)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield=='Czechia' ~ 'Czech Republic'))
#                                  !!countryfield:='Moldova' :~ 'Republic Of Moldova',
#                                  !!countryfield:='Russia' :~ 'Russian Federation',
#                                  !!countryfield:='Russian Fed.' :~ 'Russian Federation',
#                                  !!countryfield:='UK' :~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname(dataset,country)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield=='Czechia' ~ 'Czech Republic'))
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield=='Czechia' ~ 'Czech Republic')),
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield=='Czechia' ~ 'Czech Republic',
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname(dataset,country)
test<-WHO_countryname(dataset,country)
View(test)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield=='Czechia' ~ 'Czech Republic',
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield %in% who_names$ADM0NAME,!!countryfield,
!!countryfield=='Czechia' ~ 'Czech Republic',
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
test<-WHO_countryname(dataset,country)
WHO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield %in% who_names$ADM0NAME ~ !!countryfield,
!!countryfield=='Czechia' ~ 'Czech Republic',
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
test<-WHO_countryname(dataset,country)
View(test)
WHO_EURO_countryname <- function(dataset,countryfield) {
require (dplyr)
require (stringr)
who_names<-read.csv(here::here('data','ref_Country.csv')) %>% select(ADM0NAME) %>%
mutate(ADM0NAME=str_to_title(ADM0NAME))
countryfield <- enquo(countryfield)
NewDataset<-dataset %>%
mutate(!!countryfield:=str_to_title(!!countryfield)) %>%
mutate(!!countryfield:=case_when(!!countryfield %in% who_names$ADM0NAME ~ !!countryfield,
!!countryfield=='Czechia' ~ 'Czech Republic',
!!countryfield=='Moldova' ~ 'Republic Of Moldova',
!!countryfield=='Russia' ~ 'Russian Federation',
!!countryfield=='Russian Fed.' ~ 'Russian Federation',
!!countryfield=='UK' ~ 'United Kingdom'))
return(NewDataset)
}
R_chart <- function(country){
require(dplyr)
Dataset_Epiforecast <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv") %>%
filter(type=='estimate') %>%
mutate(country=WHO_countryname(country))
Dataset_Epiforecast <- WHO_EURO_countryname(Dataset_Epiforecast,country)
}
R_chart('Belgium')
R_chart <- function(ctr){
require(dplyr)
Dataset_Epiforecast <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv") %>%
filter(type=='estimate')
Dataset_Epiforecast <- WHO_EURO_countryname(Dataset_Epiforecast,country)
}
R_chart('Belgium')
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr)
Dataset_Rt <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv") %>%
filter(type=='estimate')
Dataset_Rt <- WHO_EURO_countryname(Dataset_Rt,country)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr)
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L))
Dataset_Rt <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv")
Dataset_Rt <- WHO_EURO_countryname(Dataset_Rt,country)
CTR
ctr
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(ADM0NAME,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy"))))
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L))
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(ADM0NAME,date,R=median,lower_90,upper_90)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy"))))
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L))
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90)
View(Dataset_Rt_Country)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy")))) %>%
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L))
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy")))) %>%
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L)) %>%
mutate(Indicator1=if_else(R<=1 & NbDays>=14,"R is lower than 1 since more than 2 weeks",
if_else(R<=1,"R is lower than 1","R is higher than 1")))
Dataset_Rt <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv")
Dataset_Rt <- WHO_EURO_countryname(Dataset_Rt,country)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy")))) %>%
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L)) %>%
mutate(Classification=if_else(R<=1 & NbDays>=14,"R is lower than 1 since more than 2 weeks",
if_else(R<=1,"R is lower than 1","R is higher than 1")))
Dataset_Rt_Country$Classification<-factor(Dataset_Rt_Country$Classification, levels = c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"))
Dataset_Rt_Country<-Dataset_Rt_Country %>% filter(date<=Sys.Date())
ForPolygon_Up<-Dataset_Rt_Country %>% select(date,coord=upper_90)
View(ForPolygon_Up)
Dataset_Rt <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv")
Dataset_Rt <- WHO_EURO_countryname(Dataset_Rt,country)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy")))) %>%
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L)) %>%
mutate(Classification=if_else(R<=1 & NbDays>=14,"R is lower than 1 since more than 2 weeks",
if_else(R<=1,"R is lower than 1","R is higher than 1")))
Dataset_Rt_Country$Classification<-factor(Dataset_Rt_Country$Classification, levels = c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"))
Dataset_Rt_Country<-Dataset_Rt_Country %>% filter(date<=Sys.Date())
View(Dataset_Rt_Country)
ForPolygon_Up<-Dataset_Rt_Country %>% select(date,coord=upper_90)
ForPolygon_Low<-Dataset_Rt_Country %>% select(date,coord=lower_90) %>% arrange(desc(date))
ForPolygon<-bind_rows(ForPolygon_Up,ForPolygon_Low)
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Indicator1,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate(),maxDate()))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
minDate<-min(Dataset_Rt_Country$date)
maxDate<-max(Dataset_Rt_Country$date)
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Indicator1,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate)+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Indicator1,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
chart
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color='black',group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
chart
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color='Classification',group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
classification
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color='Classification',group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
chart
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy")))) %>%
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L)) %>%
mutate(Classification=if_else(R<=1 & NbDays>=14,"R is lower than 1 since more than 2 weeks",
if_else(R<=1,"R is lower than 1","R is higher than 1")))
Dataset_Rt_Country$Classification<-factor(Dataset_Rt_Country$Classification, levels = c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"))
Dataset_Rt_Country<-Dataset_Rt_Country %>% filter(date<=Sys.Date())
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Classification,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
plot_grid(chart+theme(legend.position="none"),get_legend(p2),ncol=2,rel_widths=c(8,2),align="vh")
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Classification,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
chart
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Classification,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m-%y",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
chart
R_chart <- function(ctr){
require(dplyr)
Dataset_Rt <- read.csv("https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary/rt.csv")
Dataset_Rt <- WHO_EURO_countryname(Dataset_Rt,country)
Dataset_Rt_Country<-Dataset_Rt %>% filter(country==ctr) %>%
filter(type!='forecast') %>% select(country,date,R=median,lower_90,upper_90) %>%
mutate(date=as.Date(parse_date_time(date, c("dmy", "ymd","mdy")))) %>%
group_by(ID = data.table::rleid(R < 1)) %>%
mutate(NbDays = if_else(R < 1, row_number(), 0L)) %>%
mutate(Classification=if_else(R<=1 & NbDays>=14,"R is lower than 1 since more than 2 weeks",
if_else(R<=1,"R is lower than 1","R is higher than 1")))
Dataset_Rt_Country$Classification<-factor(Dataset_Rt_Country$Classification, levels = c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"))
Dataset_Rt_Country<-Dataset_Rt_Country %>% filter(date<=Sys.Date())
ForPolygon_Up<-Dataset_Rt_Country %>% select(date,coord=upper_90)
ForPolygon_Low<-Dataset_Rt_Country %>% select(date,coord=lower_90) %>% arrange(desc(date))
ForPolygon<-bind_rows(ForPolygon_Up,ForPolygon_Low)
minDate<-min(Dataset_Rt_Country$date)
maxDate<-max(Dataset_Rt_Country$date)
chart<-ggplot()+
geom_polygon(data=ForPolygon,aes(x=date,y=coord,fill='Confidence Interval 90'),alpha=0.3)+
geom_line(data=Dataset_Rt_Country,aes(x=date,y=R,color=Classification,group=1),size=0.73)+
scale_x_date(date_labels = "%d-%m-%y",date_breaks = "15 days",limits=c(minDate,maxDate))+
labs(y="Rt",x='Date of report')+
theme(legend.title = element_blank(),legend.text = element_text(size=10),legend.key.size=unit(0.2,"cm"),
plot.title = element_text(size = 10, face = "bold"),axis.title.y = element_text(size=10))+
scale_color_manual(values=c("#C65154","#BBE4D1","#3EA8A6"),
breaks=c("R is higher than 1","R is lower than 1","R is lower than 1 since more than 2 weeks"),
labels=c("Rt higher than 1","Rt lower than 1","Rt lower than 1 \nfor more than 2 weeks"),drop=FALSE)+
scale_fill_manual(values=c("#494850"),
breaks=c("Confidence Interval 90"),drop=FALSE)+
geom_hline(aes(yintercept=1),linetype="dashed")
#plot_grid(chart+theme(legend.position="none"),get_legend(p2),ncol=2,rel_widths=c(8,2),align="vh")
return(chart)
}
R_chart('Belgium')
setwd("parent_directory")
create('test')
